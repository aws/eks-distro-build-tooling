
# This file was generated by running `make run-make-tests` and `make update-make-tests-expected`. DO NOT EDIT

/override/root/../scripts/buildkit_check.sh
printf "Building standard eks-distro-base\n\n"
./check_update.sh eks-distro-base 2
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.base --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BASE_IMAGE=public.ecr.aws/amazonlinux/amazonlinux:2 --progress plain --local dockerfile=./ --local context=. --opt target=final --export-cache type=inline   --output type=image,oci-mediatypes=true,\"name=localhost:5000/eks-distro-base:test-tag,localhost:5000/eks-distro-base:latest,localhost:5000/eks-distro-base:latest.2,localhost:5000/eks-distro-base:latest-al2\",push=true
printf "\n\nBuilding base builder stage\n\n"
./check_update.sh eks-distro-minimal-base-builder 2
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-base --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BASE_IMAGE=scratch --opt build-arg:BUILDER_IMAGE=localhost:5000/eks-distro-base:test-tag --progress plain --local dockerfile=./ --local context=. --opt target=builder --export-cache type=inline   --output type=image,oci-mediatypes=true,\"name=localhost:5000/eks-distro-minimal-base-builder:test-tag,localhost:5000/eks-distro-minimal-base-builder:latest,localhost:5000/eks-distro-minimal-base-builder:latest.2,localhost:5000/eks-distro-minimal-base-builder:latest-al2\",push=true
printf "\n\nBuilding base final stage\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-base --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BASE_IMAGE=scratch --opt build-arg:BUILT_BUILDER_IMAGE=localhost:5000/eks-distro-minimal-base-builder:test-tag --progress plain --local dockerfile=./ --local context=. --opt target=final --export-cache type=inline   --output type=image,oci-mediatypes=true,\"name=localhost:5000/eks-distro-minimal-base:test-tag,localhost:5000/eks-distro-minimal-base:latest,localhost:5000/eks-distro-minimal-base:latest.2,localhost:5000/eks-distro-minimal-base:latest-al2\",push=true
printf "\n\nExporting packages and files from  base final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=localhost:5000/eks-distro-minimal-base-builder:test-tag --opt build-arg:EXPORT_NAME=base --progress plain --local dockerfile=./ --local context=. --opt target=export    --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/base ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/base* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
printf "\n\nValidating libraries and symlinks in base final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=localhost:5000/eks-distro-minimal-base-builder:test-tag --progress plain --local dockerfile=./ --local context=. --opt target=validate    --output type=local,dest=/tmp
if command -v docker &> /dev/null && docker info > /dev/null 2>&1 ; then \
		/override/root/tests/run_tests.sh localhost:5000 test-tag 2 linux/amd64 check_base localhost:5000; \
	fi
printf "Building base complete!\n\n"
printf "\n\nBuilding base-glibc builder stage\n\n"
./check_update.sh eks-distro-minimal-base-glibc-builder 2
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-base-glibc --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BASE_IMAGE=localhost:5000/eks-distro-minimal-base:test-tag --opt build-arg:BUILDER_IMAGE=localhost:5000/eks-distro-minimal-base-builder:test-tag --progress plain --local dockerfile=./ --local context=. --opt target=builder --export-cache type=inline   --output type=image,oci-mediatypes=true,\"name=localhost:5000/eks-distro-minimal-base-glibc-builder:test-tag,localhost:5000/eks-distro-minimal-base-glibc-builder:latest,localhost:5000/eks-distro-minimal-base-glibc-builder:latest.2,localhost:5000/eks-distro-minimal-base-glibc-builder:latest-al2\",push=true
printf "\n\nBuilding base-glibc final stage\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BASE_IMAGE=localhost:5000/eks-distro-minimal-base:test-tag --opt build-arg:BUILT_BUILDER_IMAGE=localhost:5000/eks-distro-minimal-base-glibc-builder:test-tag --progress plain --local dockerfile=./ --local context=. --opt target=final --export-cache type=inline   --output type=image,oci-mediatypes=true,\"name=localhost:5000/eks-distro-minimal-base-glibc:test-tag,localhost:5000/eks-distro-minimal-base-glibc:latest,localhost:5000/eks-distro-minimal-base-glibc:latest.2,localhost:5000/eks-distro-minimal-base-glibc:latest-al2\",push=true
printf "\n\nExporting packages and files from  base-glibc final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=localhost:5000/eks-distro-minimal-base-glibc-builder:test-tag --opt build-arg:EXPORT_NAME=glibc --progress plain --local dockerfile=./ --local context=. --opt target=export    --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/glibc ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/glibc* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
printf "\n\nValidating libraries and symlinks in base-glibc final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=localhost:5000/eks-distro-minimal-base-glibc-builder:test-tag --progress plain --local dockerfile=./ --local context=. --opt target=validate    --output type=local,dest=/tmp
if command -v docker &> /dev/null && docker info > /dev/null 2>&1 ; then \
		/override/root/tests/run_tests.sh localhost:5000 test-tag 2 linux/amd64 check_base-glibc localhost:5000; \
	fi
printf "Building base-glibc complete!\n\n"
printf "\n\nBuilding base-compiler-base builder stage\n\n"
./check_update.sh compiler-base-builder 2
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-base-compiler --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BASE_IMAGE=localhost:5000/eks-distro-minimal-base-glibc:test-tag --opt build-arg:BUILDER_IMAGE=localhost:5000/eks-distro-minimal-base-glibc-builder:test-tag --progress plain --local dockerfile=./ --local context=. --opt target=builder --export-cache type=inline   --output type=image,oci-mediatypes=true,\"name=localhost:5000/compiler-base-builder:test-tag,localhost:5000/compiler-base-builder:latest,localhost:5000/compiler-base-builder:latest.2,localhost:5000/compiler-base-builder:latest-al2\",push=true
printf "\n\nBuilding base-compiler-base final stage\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-base-compiler --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BASE_IMAGE=localhost:5000/eks-distro-minimal-base-glibc:test-tag --opt build-arg:BUILT_BUILDER_IMAGE=localhost:5000/compiler-base-builder:test-tag --progress plain --local dockerfile=./ --local context=. --opt target=final --export-cache type=inline   --output type=image,oci-mediatypes=true,\"name=localhost:5000/compiler-base:test-tag,localhost:5000/compiler-base:latest,localhost:5000/compiler-base:latest.2,localhost:5000/compiler-base:latest-al2\",push=true
printf "\n\nExporting packages and files from  base-compiler-base final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=localhost:5000/compiler-base-builder:test-tag --opt build-arg:EXPORT_NAME=compiler-base --progress plain --local dockerfile=./ --local context=. --opt target=export    --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/compiler-base ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/compiler-base* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
printf "\n\nValidating libraries and symlinks in base-compiler-base final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=localhost:5000/compiler-base-builder:test-tag --progress plain --local dockerfile=./ --local context=. --opt target=validate    --output type=local,dest=/tmp
if command -v docker &> /dev/null && docker info > /dev/null 2>&1 ; then \
		/override/root/tests/run_tests.sh localhost:5000 test-tag 2 linux/amd64 check_base-compiler-base localhost:5000; \
	fi
printf "Building base-compiler-base complete!\n\n"
printf "\n\nBuilding base-compiler-yum builder stage\n\n"
./check_update.sh compiler-base-builder 2 yum
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-base-compiler --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BASE_IMAGE=localhost:5000/compiler-base:test-tag --opt build-arg:BUILDER_IMAGE=localhost:5000/compiler-base-builder:test-tag --opt build-arg:VERSIONED_VARIANT=yum --progress plain --local dockerfile=./ --local context=. --opt target=builder --export-cache type=inline   --output type=image,oci-mediatypes=true,\"name=localhost:5000/compiler-base-builder:yum-test-tag,localhost:5000/compiler-base-builder:latest,localhost:5000/compiler-base-builder:latest.2,localhost:5000/compiler-base-builder:latest-al2\",push=true
printf "\n\nBuilding base-compiler-yum final stage\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-base-compiler --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BASE_IMAGE=localhost:5000/compiler-base:test-tag --opt build-arg:BUILT_BUILDER_IMAGE=localhost:5000/compiler-base-builder:yum-test-tag --opt build-arg:VERSIONED_VARIANT=yum --progress plain --local dockerfile=./ --local context=. --opt target=final --export-cache type=inline   --output type=image,oci-mediatypes=true,\"name=localhost:5000/compiler-base:yum-test-tag,localhost:5000/compiler-base:latest,localhost:5000/compiler-base:latest.2,localhost:5000/compiler-base:latest-al2\",push=true
printf "\n\nExporting packages and files from  base-compiler-yum final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=localhost:5000/compiler-base-builder:yum-test-tag --opt build-arg:EXPORT_NAME=compiler-yum --progress plain --local dockerfile=./ --local context=. --opt target=export    --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/compiler-yum ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/compiler-yum* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
printf "\n\nValidating libraries and symlinks in base-compiler-yum final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=localhost:5000/compiler-base-builder:yum-test-tag --progress plain --local dockerfile=./ --local context=. --opt target=validate    --output type=local,dest=/tmp
if command -v docker &> /dev/null && docker info > /dev/null 2>&1 ; then \
		/override/root/tests/run_tests.sh localhost:5000 yum-test-tag 2 linux/amd64 check_base-compiler-yum localhost:5000; \
	fi
printf "Building base-compiler-yum complete!\n\n"
