
# This file was generated by running `make run-make-tests` and `make update-make-tests-expected`. DO NOT EDIT

tag from file for eks-distro-minimal-base: some-previous-tag
printf "\n\nExporting packages and files from  base final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/eks-distro-minimal-base-builder:some-previous-tag --opt build-arg:EXPORT_NAME=base --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/base ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/base* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-nonroot: some-previous-tag
printf "\n\nExporting packages and files from  base-nonroot final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/eks-distro-minimal-base-nonroot-builder:some-previous-tag --opt build-arg:EXPORT_NAME=base --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/base ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/base* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-glibc: some-previous-tag
printf "\n\nExporting packages and files from  base-glibc final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/eks-distro-minimal-base-glibc-builder:some-previous-tag --opt build-arg:EXPORT_NAME=glibc --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/glibc ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/glibc* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-iptables: some-previous-tag
printf "\n\nExporting packages and files from  base-iptables final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/eks-distro-minimal-base-iptables-builder:some-previous-tag --opt build-arg:EXPORT_NAME=iptables --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/iptables ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/iptables* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-nsenter: some-previous-tag
printf "\n\nExporting packages and files from  base-nsenter final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/eks-distro-minimal-base-nsenter-builder:some-previous-tag --opt build-arg:EXPORT_NAME=nsenter --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/nsenter ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/nsenter* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-docker-client: some-previous-tag
printf "\n\nExporting packages and files from  base-docker-client final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/eks-distro-minimal-base-docker-client-builder:some-previous-tag --opt build-arg:EXPORT_NAME=docker-client --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/docker-client ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/docker-client* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-nginx: some-previous-tag
printf "\n\nExporting packages and files from  base-nginx final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/eks-distro-minimal-base-nginx-builder:some-previous-tag --opt build-arg:EXPORT_NAME=nginx --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/nginx ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/nginx* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-csi-ebs: some-previous-tag
printf "\n\nExporting packages and files from  base-csi-ebs final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/eks-distro-minimal-base-csi-ebs-builder:some-previous-tag --opt build-arg:EXPORT_NAME=csi-ebs --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/csi-ebs ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/csi-ebs* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-csi: some-previous-tag
printf "\n\nExporting packages and files from  base-csi final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/eks-distro-minimal-base-csi-builder:some-previous-tag --opt build-arg:EXPORT_NAME=csi --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/csi ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/csi* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-kind: some-previous-tag
printf "\n\nExporting packages and files from  base-kind final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/eks-distro-minimal-base-kind-builder:some-previous-tag --opt build-arg:EXPORT_NAME=kind --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/kind ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/kind* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-haproxy: some-previous-tag
printf "\n\nExporting packages and files from  base-haproxy final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/eks-distro-minimal-base-haproxy-builder:some-previous-tag --opt build-arg:EXPORT_NAME=haproxy --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/haproxy ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/haproxy* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-git: some-previous-tag
printf "\n\nExporting packages and files from  base-git final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/eks-distro-minimal-base-git-builder:some-previous-tag --opt build-arg:EXPORT_NAME=git --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/git ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/git* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-compiler-base: some-previous-tag
printf "\n\nExporting packages and files from  base-compiler-base final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/compiler-base-builder:some-previous-tag --opt build-arg:EXPORT_NAME=compiler-base --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/compiler-base ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/compiler-base* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-compiler-yum: some-previous-tag
printf "\n\nExporting packages and files from  base-compiler-yum final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/compiler-base-builder:some-previous-tag --opt build-arg:EXPORT_NAME=compiler-yum --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/compiler-yum ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/compiler-yum* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-compiler-gcc: some-previous-tag
printf "\n\nExporting packages and files from  base-compiler-gcc final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/compiler-base-builder:some-previous-tag --opt build-arg:EXPORT_NAME=compiler-gcc --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/compiler-gcc ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/compiler-gcc* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-python-3.7: some-previous-tag
printf "\n\nExporting packages and files from  base-python-3.7 final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/eks-distro-minimal-base-python-builder:some-previous-tag --opt build-arg:EXPORT_NAME=python-3.7 --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/python-3.7 ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/python-3.7* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-python-3.9: some-previous-tag
printf "\n\nExporting packages and files from  base-python-3.9 final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/eks-distro-minimal-base-python-builder:some-previous-tag --opt build-arg:EXPORT_NAME=python-3.9 --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/python-3.9 ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/python-3.9* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-nodejs-16: some-previous-tag
printf "\n\nExporting packages and files from  base-nodejs-16 final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/eks-distro-minimal-base-nodejs-builder:some-previous-tag --opt build-arg:EXPORT_NAME=nodejs-16 --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/nodejs-16 ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/nodejs-16* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-golang-compiler-1.18-base: some-previous-tag
printf "\n\nExporting packages and files from  base-golang-compiler-1.18-base final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/golang-builder:some-previous-tag --opt build-arg:EXPORT_NAME=golang-compiler-1.18-base --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/golang-compiler-1.18-base ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/golang-compiler-1.18-base* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-golang-compiler-1.18-yum: some-previous-tag
printf "\n\nExporting packages and files from  base-golang-compiler-1.18-yum final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/golang-builder:some-previous-tag --opt build-arg:EXPORT_NAME=golang-compiler-1.18-yum --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/golang-compiler-1.18-yum ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/golang-compiler-1.18-yum* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-golang-compiler-1.18-gcc: some-previous-tag
printf "\n\nExporting packages and files from  base-golang-compiler-1.18-gcc final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/golang-builder:some-previous-tag --opt build-arg:EXPORT_NAME=golang-compiler-1.18-gcc --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/golang-compiler-1.18-gcc ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/golang-compiler-1.18-gcc* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-golang-compiler-1.19-base: some-previous-tag
printf "\n\nExporting packages and files from  base-golang-compiler-1.19-base final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/golang-builder:some-previous-tag --opt build-arg:EXPORT_NAME=golang-compiler-1.19-base --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/golang-compiler-1.19-base ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/golang-compiler-1.19-base* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-golang-compiler-1.19-yum: some-previous-tag
printf "\n\nExporting packages and files from  base-golang-compiler-1.19-yum final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/golang-builder:some-previous-tag --opt build-arg:EXPORT_NAME=golang-compiler-1.19-yum --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/golang-compiler-1.19-yum ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/golang-compiler-1.19-yum* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-golang-compiler-1.19-gcc: some-previous-tag
printf "\n\nExporting packages and files from  base-golang-compiler-1.19-gcc final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/golang-builder:some-previous-tag --opt build-arg:EXPORT_NAME=golang-compiler-1.19-gcc --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/golang-compiler-1.19-gcc ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/golang-compiler-1.19-gcc* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-golang-compiler-1.20-base: some-previous-tag
printf "\n\nExporting packages and files from  base-golang-compiler-1.20-base final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/golang-builder:some-previous-tag --opt build-arg:EXPORT_NAME=golang-compiler-1.20-base --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/golang-compiler-1.20-base ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/golang-compiler-1.20-base* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-golang-compiler-1.20-yum: some-previous-tag
printf "\n\nExporting packages and files from  base-golang-compiler-1.20-yum final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/golang-builder:some-previous-tag --opt build-arg:EXPORT_NAME=golang-compiler-1.20-yum --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/golang-compiler-1.20-yum ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/golang-compiler-1.20-yum* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-golang-compiler-1.20-gcc: some-previous-tag
printf "\n\nExporting packages and files from  base-golang-compiler-1.20-gcc final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/golang-builder:some-previous-tag --opt build-arg:EXPORT_NAME=golang-compiler-1.20-gcc --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/golang-compiler-1.20-gcc ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/golang-compiler-1.20-gcc* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-nodejs-compiler-16-base: some-previous-tag
printf "\n\nExporting packages and files from  base-nodejs-compiler-16-base final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/nodejs-builder:some-previous-tag --opt build-arg:EXPORT_NAME=nodejs-compiler-16-base --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/nodejs-compiler-16-base ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/nodejs-compiler-16-base* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-nodejs-compiler-16-yum: some-previous-tag
printf "\n\nExporting packages and files from  base-nodejs-compiler-16-yum final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/nodejs-builder:some-previous-tag --opt build-arg:EXPORT_NAME=nodejs-compiler-16-yum --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/nodejs-compiler-16-yum ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/nodejs-compiler-16-yum* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-nodejs-compiler-16-gcc: some-previous-tag
printf "\n\nExporting packages and files from  base-nodejs-compiler-16-gcc final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/nodejs-builder:some-previous-tag --opt build-arg:EXPORT_NAME=nodejs-compiler-16-gcc --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/nodejs-compiler-16-gcc ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/nodejs-compiler-16-gcc* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-python-compiler-3.7-base: some-previous-tag
printf "\n\nExporting packages and files from  base-python-compiler-3.7-base final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/python-builder:some-previous-tag --opt build-arg:EXPORT_NAME=python-compiler-3.7-base --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/python-compiler-3.7-base ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/python-compiler-3.7-base* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-python-compiler-3.9-base: some-previous-tag
printf "\n\nExporting packages and files from  base-python-compiler-3.9-base final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/python-builder:some-previous-tag --opt build-arg:EXPORT_NAME=python-compiler-3.9-base --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/python-compiler-3.9-base ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/python-compiler-3.9-base* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-python-compiler-3.7-yum: some-previous-tag
printf "\n\nExporting packages and files from  base-python-compiler-3.7-yum final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/python-builder:some-previous-tag --opt build-arg:EXPORT_NAME=python-compiler-3.7-yum --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/python-compiler-3.7-yum ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/python-compiler-3.7-yum* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-python-compiler-3.9-yum: some-previous-tag
printf "\n\nExporting packages and files from  base-python-compiler-3.9-yum final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/python-builder:some-previous-tag --opt build-arg:EXPORT_NAME=python-compiler-3.9-yum --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/python-compiler-3.9-yum ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/python-compiler-3.9-yum* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-python-compiler-3.7-gcc: some-previous-tag
printf "\n\nExporting packages and files from  base-python-compiler-3.7-gcc final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/python-builder:some-previous-tag --opt build-arg:EXPORT_NAME=python-compiler-3.7-gcc --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/python-compiler-3.7-gcc ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/python-compiler-3.7-gcc* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
tag from file for eks-distro-minimal-base-python-compiler-3.9-gcc: some-previous-tag
printf "\n\nExporting packages and files from  base-python-compiler-3.9-gcc final image\n\n"
/override/root/../scripts/buildkit.sh build --frontend dockerfile.v0 --opt filename=Dockerfile.minimal-helpers --opt platform=linux/amd64 --opt build-arg:OUTPUT_DEBUG_LOG= --opt build-arg:BUILT_BUILDER_IMAGE=public.ecr.aws/eks-distro-build-tooling/python-builder:some-previous-tag --opt build-arg:EXPORT_NAME=python-compiler-3.9-gcc --progress plain --local dockerfile=./ --local context=. --opt target=export     --output type=local,dest=/override/root/../eks-distro-base-minimal-packages/2
if [ -f /override/root/../eks-distro-base-minimal-packages/2/python-compiler-3.9-gcc ]; then \
		mv /override/root/../eks-distro-base-minimal-packages/2/python-compiler-3.9-gcc* /override/root/../eks-distro-base-minimal-packages/2/linux_amd64/; \
	fi
