# Copyright 2020 Amazon.com Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Using one multistage Dockerfile since we use buildkit in prow
# there is no image repo so building images that build on each other 
# is not supported, unless we do a multistage build like the following
# where the caching system can be used for subsequent target builds

# *NOTE* we have to limit our number of layers heres because in presubmits there
# is no overlay fs and we will run out of space quickly

ARG BASE_IMAGE
FROM ${BASE_IMAGE} as builder

RUN yum upgrade -y && \
    yum update -y && \
    yum install -y yum-utils

ENV DOWNLOAD_DIR /tmp/download
ENV NEWROOT /newroot
ENV FAKE_INSTALLS bash glibc p11-kit p11-kit-trust

COPY scripts/ /usr/bin

WORKDIR $NEWROOT

# non root user
RUN mkdir -p $NEWROOT/home/nonroot && \
    chown 65532:65532 $NEWROOT/home/nonroot && \
    # tmp directory with correct permissions
    mkdir -p -m 1777 $NEWROOT/tmp

RUN set -x && \
    # setup rpm + yum
    yumdownloader --destdir=$DOWNLOAD_DIR \
        system-release && \
    rpm -ivh --nodeps --root $NEWROOT $DOWNLOAD_DIR/system-release*.rpm && \
    # "install" excluded deps we do not want in final image
    yumdownloader --destdir=/tmp/exclude -x "*.i686"  \
        $FAKE_INSTALLS && \        
    rpm -ivh --justdb --nodeps --root $NEWROOT /tmp/exclude/*.rpm && \
    yum --installroot $NEWROOT install -y \
        basesystem \
        filesystem \        
        setup \        
        tzdata && \    
    # postinstall scriptlet for ca-certs will fail, manually extract and copy
    # key files from host
    yumdownloader --destdir=$DOWNLOAD_DIR \
        ca-certificates && \
    rpm -ivh --root $NEWROOT --justdb $DOWNLOAD_DIR/ca-certificates*.rpm && \
    for rpm in $DOWNLOAD_DIR/ca-certificates*.rpm; do rpm2cpio $rpm | cpio -idmv; done && \
    # cert files created by post install of ca-certs
    update-ca-trust && \
    cp -rf /etc/pki $NEWROOT/etc && \
    rpm --root $NEWROOT --nodeps --justdb -e $FAKE_INSTALLS && \
    cleanup "base"

COPY files/ $NEWROOT


################# BASE ########################
FROM scratch as base
ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

COPY --from=builder /newroot /


################# BASE-NONROOT ################
FROM base as base-nonroot
USER 65532


################# GLIBC ####################
FROM builder as glibc-builder

RUN set -x && \
    # let yum install bash since it will be needed for scriptlets
    # will be removed along with its deps at the end
    yum --installroot $NEWROOT install -y  \
        glibc && \
    # this is provided in minimal base, glibc brings its own, remove it
    rm etc/nsswitch.conf.rpmnew && \
    # remove bash and deps (ncurses)
    rpm --root $NEWROOT --nodeps -e bash && \
    yum --installroot $NEWROOT autoremove -y && \
    cleanup "glibc"


FROM base as base-glibc
COPY --from=glibc-builder /newroot /


################# IPTABLES ####################
FROM glibc-builder as iptables-builder

RUN set -x && \
    # manually "install" systemd to avoid installing the entire dep tree
    yumdownloader --destdir=$DOWNLOAD_DIR -x "*.i686" systemd && \
    rpm -ivh --nodeps --justdb --root $NEWROOT $DOWNLOAD_DIR/systemd*.rpm && \ 
    # following are from coreutils needed by install scriptlets
    for cmd in "readlink" "rm"; do cp /usr/bin/$cmd $NEWROOT/usr/bin/; done && \
    yum --installroot $NEWROOT install -y  \
        conntrack-tools \
        ebtables \
        ipset \
        iptables \
        iptables-nft \
        kmod && \
    for cmd in "readlink" "rm"; do rm $NEWROOT/usr/bin/$cmd; done && \
    # remove bash + systemd and deps
    rpm --root $NEWROOT --justdb --nodeps -e systemd && \
    rpm --root $NEWROOT --nodeps -e bash && \
    yum --installroot $NEWROOT autoremove -y && \
    cleanup "iptables"


FROM base-glibc as base-iptables
COPY --from=iptables-builder /newroot /
