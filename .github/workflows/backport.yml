name: Issue comment handler
on: [issue_comment, workflow_dispatch]

jobs:
  check_comment:
    runs-on: ubuntu-latest
    steps:
    - id: checkout_repo
      uses: actions/checkout@v3
      with:
        path: main
    - id: check_the_comment
      run: |
            if [[ $COMMENT =~ "/backport" ]]; then 
              echo "Comment contains request to backport..."
              echo "is_backport_comment=true" >> $GITHUB_OUTPUT
            else 
              echo "No backport request...ending job."
              echo "is_backport_comment=false" >> $GITHUB_OUTPUT
            fi
            echo "go_version_array=$(cat ${GITHUB_WORKSPACE}/main/projects/golang/go/MAINTAINED_EOL_VERSIONS | jq -R -s -c 'split("\n") | map(select(length > 0))')" >> $GITHUB_OUTPUT
    - id: check_owners
      run: |
            owners=($(awk '/-/ {print $2}' ${GITHUB_WORKSPACE}/main/OWNERS))
            for i in "${owners[@]}"; do
              if [[ ${{ github.event.comment.user.login }} == "$i" ]]; then
                echo "$i is a repository owner"
                echo "is_owner=true" >> $GITHUB_OUTPUT
                break
              fi
              echo "is_owner=false" >> $GITHUB_OUTPUT
            done
    outputs:
      go_version_array: ${{ steps.check_the_comment.outputs.go_version_array }}
      is_backport_comment: ${{ steps.check_the_comment.outputs.is_backport_comment }}
      is_owner: ${{ steps.check_owners.outputs.is_owner }}
  open_issues:
    if: ${{ needs.check_comment.outputs.is_backport_comment == 'true' && needs.check_comment.outputs.is_owner == 'true' }}
    runs-on: ubuntu-latest
    needs: check_comment
    strategy:
      fail-fast: false
      matrix: 
        go_version: ${{ fromJson(needs.check_comment.outputs.go_version_array) }}
    steps:
    - id: notify
      run: echo "Opening backport issues..."
    - id: get_issue_title
      run: echo "ISSUE_TITLE=$(curl -s $ISSUE_URL | jq -r '.title')" >> $GITHUB_ENV
    - id: create_issue
      uses: dacbd/create-issue-action@v1.2.1
      with:
        token: ${{ github.token }}
        title: ${{ env.ISSUE_TITLE }} - [eks go${{ matrix.go_version }} backport]
        body: |
          A backport to EKS Go ${{ matrix.go_version }} is [requested by ${{ env.REQUESTER }}](${{ env.HTML_URL }})
        labels: security,golang
env:
  COMMENT: ${{ github.event.comment.body }}
  ISSUE_URL: ${{ github.event.comment.issue_url }}
  HTML_URL: ${{ github.event.comment.html_url }}
  REQUESTER: ${{ github.event.comment.user.login }}
